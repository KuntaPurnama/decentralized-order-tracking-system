{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        }
      ],
      "name": "OrderTracker_CannotUpdateWithTheSameStatus",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        }
      ],
      "name": "OrderTracker_OrderNotFound",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        }
      ],
      "name": "OrderTracker_StatusShouldBeDispatched",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "SuccessCreateOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "enum OrderTracker.OrderStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "SuccessUpdateOrder",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "packageId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "sender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "recepient",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dispatchTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deliveryTime",
              "type": "uint256"
            },
            {
              "internalType": "enum OrderTracker.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct OrderTracker.Order",
          "name": "order",
          "type": "tuple"
        }
      ],
      "name": "createOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getListOfOrders",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "packageId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "sender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "recepient",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dispatchTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deliveryTime",
              "type": "uint256"
            },
            {
              "internalType": "enum OrderTracker.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct OrderTracker.Order[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        }
      ],
      "name": "getOrder",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "packageId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "sender",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "recepient",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "dispatchTime",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deliveryTime",
              "type": "uint256"
            },
            {
              "internalType": "enum OrderTracker.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "exists",
              "type": "bool"
            }
          ],
          "internalType": "struct OrderTracker.Order",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        }
      ],
      "name": "getOrderHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "packageId",
              "type": "uint256"
            },
            {
              "internalType": "enum OrderTracker.OrderStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "string",
              "name": "note",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "updatedTime",
              "type": "uint256"
            }
          ],
          "internalType": "struct OrderTracker.OrderHistory[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "packageId",
          "type": "uint256"
        },
        {
          "internalType": "enum OrderTracker.OrderStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "note",
          "type": "string"
        }
      ],
      "name": "updateOrderStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdc89a962f2c067aeff187829320a08cfeb8071f716c266e8b02fe724225ee5ea",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "1793430",
    "logsBloom": "0x
    "blockHash": "0x79aeb2eaa9f4e8ca8ad69dc5614ff47f218cd4f9234de5a35e2c3ebec59682a4",
    "transactionHash": "0xdc89a962f2c067aeff187829320a08cfeb8071f716c266e8b02fe724225ee5ea",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 1,
        "transactionHash": "0xdc89a962f2c067aeff187829320a08cfeb8071f716c266e8b02fe724225ee5ea",
        "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x79aeb2eaa9f4e8ca8ad69dc5614ff47f218cd4f9234de5a35e2c3ebec59682a4"
      }
    ],
    "blockNumber": 1,
    "cumulativeGasUsed": "1793430",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "3cb119ba957f70656a3f3670e8dc35ef",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"OrderTracker_CannotUpdateWithTheSameStatus\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"OrderTracker_OrderNotFound\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"OrderTracker_StatusShouldBeDispatched\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"SuccessCreateOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"SuccessUpdateOrder\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"recepient\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dispatchTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deliveryTime\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct OrderTracker.Order\",\"name\":\"order\",\"type\":\"tuple\"}],\"name\":\"createOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getListOfOrders\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"recepient\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dispatchTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deliveryTime\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct OrderTracker.Order[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"getOrder\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"sender\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"recepient\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"dispatchTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deliveryTime\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct OrderTracker.Order\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"getOrderHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"updatedTime\",\"type\":\"uint256\"}],\"internalType\":\"struct OrderTracker.OrderHistory[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"enum OrderTracker.OrderStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"note\",\"type\":\"string\"}],\"name\":\"updateOrderStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Tano\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"createOrder((uint256,string,string,uint256,uint256,uint8,bool))\":{\"details\":\"creating new order by passing the order struct as paramater and record it in related state variable\"},\"getListOfOrders()\":{\"details\":\"getter function\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateOrderStatus(uint256,uint8,string)\":{\"details\":\"We pass enum as parameter so we don't need to manually validate if the given input is valid enum If the input is undefined enum value, it automatically give error before it reaches our function We also need to check the order existence User only can update status into different status\"}},\"title\":\"decentralized order tracking system\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contract is to implement secure and seamless decentralized order tracking system\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OrderTracker.sol\":\"OrderTracker\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/OrderTracker.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.20;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\n\\r\\n//Error code\\r\\nerror OrderTracker_OrderNotFound(uint256 packageId);\\r\\nerror OrderTracker_StatusShouldBeDispatched(uint256 packageId);\\r\\nerror OrderTracker_CannotUpdateWithTheSameStatus(uint256 packageId);\\r\\n\\r\\n/**\\r\\n * @title decentralized order tracking system\\r\\n * @author Tano\\r\\n * @notice This contract is to implement secure and seamless decentralized order tracking system\\r\\n */\\r\\ncontract OrderTracker is Ownable {\\r\\n    //Define Enum\\r\\n    enum OrderStatus {\\r\\n        Dispatched,\\r\\n        InTransit,\\r\\n        Delivered\\r\\n    }\\r\\n\\r\\n    //Define Order Struct\\r\\n    struct Order {\\r\\n        uint256 packageId;\\r\\n        string sender;\\r\\n        string recepient;\\r\\n        uint256 dispatchTime;\\r\\n        uint256 deliveryTime;\\r\\n        OrderStatus status;\\r\\n        bool exists;\\r\\n    }\\r\\n\\r\\n    struct OrderHistory {\\r\\n        uint256 packageId;\\r\\n        OrderStatus status;\\r\\n        string note;\\r\\n        uint256 updatedTime;\\r\\n    }\\r\\n\\r\\n    //Define state variable\\r\\n    mapping(uint256 => Order) private s_packageIdToOrder;\\r\\n    mapping(uint256 => OrderHistory[]) private s_packageIdToOrderHistory;\\r\\n\\r\\n    Order[] private s_listOfOrders;\\r\\n\\r\\n    //Define events\\r\\n    event SuccessCreateOrder(\\r\\n        uint256 indexed packageId,\\r\\n        address indexed creator\\r\\n    );\\r\\n\\r\\n    event SuccessUpdateOrder(\\r\\n        uint256 indexed packageId,\\r\\n        address indexed creator,\\r\\n        OrderStatus indexed status\\r\\n    );\\r\\n\\r\\n    constructor() Ownable(msg.sender) {}\\r\\n\\r\\n    /**\\r\\n     * @dev creating new order by passing the order struct as paramater and record it in related state variable\\r\\n     */\\r\\n    function createOrder(Order memory order) external onlyOwner{\\r\\n        //New order status can't be any other than Dispatched\\r\\n        if (order.status != OrderStatus.Dispatched) {\\r\\n            revert OrderTracker_StatusShouldBeDispatched(order.packageId);\\r\\n        }\\r\\n\\r\\n        //set the exists true so it means the order is recorder and exists in our storage\\r\\n        order.exists = true;\\r\\n\\r\\n        s_listOfOrders.push(order);\\r\\n        s_packageIdToOrder[order.packageId] = order;\\r\\n\\r\\n        OrderHistory memory history = OrderHistory({\\r\\n            packageId: order.packageId,\\r\\n            status: order.status,\\r\\n            updatedTime: block.timestamp,\\r\\n            note: \\\"Order is created\\\"\\r\\n        });\\r\\n\\r\\n        s_packageIdToOrderHistory[order.packageId].push(history);\\r\\n        emit SuccessCreateOrder(order.packageId, msg.sender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev We pass enum as parameter so we don't need to manually validate if the given input is valid enum\\r\\n     * If the input is undefined enum value, it automatically give error before it reaches our function\\r\\n     * We also need to check the order existence\\r\\n     * User only can update status into different status\\r\\n     */\\r\\n    function updateOrderStatus(\\r\\n        uint256 packageId,\\r\\n        OrderStatus status,\\r\\n        string memory note\\r\\n    ) external onlyOwner {\\r\\n        Order memory order = s_packageIdToOrder[packageId];\\r\\n\\r\\n        if (!order.exists) {\\r\\n            revert OrderTracker_OrderNotFound(packageId);\\r\\n        }\\r\\n\\r\\n        if (order.status == status) {\\r\\n            revert OrderTracker_CannotUpdateWithTheSameStatus(order.packageId);\\r\\n        }\\r\\n\\r\\n        //update the order status\\r\\n        s_packageIdToOrder[packageId].status = status;\\r\\n\\r\\n        //Add the order status history\\r\\n        OrderHistory memory history = OrderHistory({\\r\\n            packageId: order.packageId,\\r\\n            status: status,\\r\\n            updatedTime: block.timestamp,\\r\\n            note: note\\r\\n        });\\r\\n\\r\\n        s_packageIdToOrderHistory[order.packageId].push(history);\\r\\n        emit SuccessUpdateOrder(order.packageId, msg.sender, status);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev getter function\\r\\n     */\\r\\n    function getListOfOrders() public view returns (Order[] memory) {\\r\\n        return s_listOfOrders;\\r\\n    }\\r\\n\\r\\n    function getOrder(uint256 packageId) public view returns (Order memory) {\\r\\n        Order memory order = s_packageIdToOrder[packageId];\\r\\n\\r\\n        if (!order.exists) {\\r\\n            revert OrderTracker_OrderNotFound(packageId);\\r\\n        }\\r\\n\\r\\n        return order;\\r\\n    }\\r\\n\\r\\n    function getOrderHistory(\\r\\n        uint256 packageId\\r\\n    ) public view returns (OrderHistory[] memory) {\\r\\n        Order memory order = s_packageIdToOrder[packageId];\\r\\n\\r\\n        if (!order.exists) {\\r\\n            revert OrderTracker_OrderNotFound(packageId);\\r\\n        }\\r\\n\\r\\n        return s_packageIdToOrderHistory[packageId];\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x537ad9b7382b1b251408bb58962e5a14d342377766e3e4c4b97b96e9ff99aa88\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b14610101578063d09ef2411461011f578063e47a35511461014f578063f2fde38b1461016b57610088565b806335f7a4441461008d5780635fb97376146100ab57806360e1102e146100db578063715018a6146100f7575b600080fd5b610095610187565b6040516100a2919061153e565b60405180910390f35b6100c560048036038101906100c091906115a0565b61037e565b6040516100d291906116f2565b60405180910390f35b6100f560048036038101906100f0919061186e565b6106d2565b005b6100ff610ac2565b005b610109610ad6565b604051610116919061191e565b60405180910390f35b610139600480360381019061013491906115a0565b610aff565b60405161014691906119dc565b60405180910390f35b61016960048036038101906101649190611b20565b610d10565b005b61018560048036038101906101809190611b95565b611074565b005b60606003805480602002602001604051908101604052809291908181526020016000905b8282101561037557838290600052602060002090600602016040518060e0016040529081600082015481526020016001820180546101e890611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461021490611bf1565b80156102615780601f1061023657610100808354040283529160200191610261565b820191906000526020600020905b81548152906001019060200180831161024457829003601f168201915b5050505050815260200160028201805461027a90611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546102a690611bf1565b80156102f35780601f106102c8576101008083540402835291602001916102f3565b820191906000526020600020905b8154815290600101906020018083116102d657829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16600281111561033557610334611373565b5b600281111561034757610346611373565b5b81526020016005820160019054906101000a900460ff161515151581525050815260200190600101906101ab565b50505050905090565b60606000600160008481526020019081526020016000206040518060e0016040529081600082015481526020016001820180546103ba90611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546103e690611bf1565b80156104335780601f1061040857610100808354040283529160200191610433565b820191906000526020600020905b81548152906001019060200180831161041657829003601f168201915b5050505050815260200160028201805461044c90611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461047890611bf1565b80156104c55780601f1061049a576101008083540402835291602001916104c5565b820191906000526020600020905b8154815290600101906020018083116104a857829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16600281111561050757610506611373565b5b600281111561051957610518611373565b5b81526020016005820160019054906101000a900460ff16151515158152505090508060c0015161058057826040517fc0da65660000000000000000000000000000000000000000000000000000000081526004016105779190611c31565b60405180910390fd5b60026000848152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156106c65783829060005260206000209060040201604051806080016040529081600082015481526020016001820160009054906101000a900460ff16600281111561060557610604611373565b5b600281111561061757610616611373565b5b815260200160028201805461062b90611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461065790611bf1565b80156106a45780601f10610679576101008083540402835291602001916106a4565b820191906000526020600020905b81548152906001019060200180831161068757829003601f168201915b50505050508152602001600382015481525050815260200190600101906105b3565b50505050915050919050565b6106da6110fa565b6000600160008581526020019081526020016000206040518060e00160405290816000820154815260200160018201805461071490611bf1565b80601f016020809104026020016040519081016040528092919081815260200182805461074090611bf1565b801561078d5780601f106107625761010080835404028352916020019161078d565b820191906000526020600020905b81548152906001019060200180831161077057829003601f168201915b505050505081526020016002820180546107a690611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546107d290611bf1565b801561081f5780601f106107f45761010080835404028352916020019161081f565b820191906000526020600020905b81548152906001019060200180831161080257829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff16600281111561086157610860611373565b5b600281111561087357610872611373565b5b81526020016005820160019054906101000a900460ff16151515158152505090508060c001516108da57836040517fc0da65660000000000000000000000000000000000000000000000000000000081526004016108d19190611c31565b60405180910390fd5b8260028111156108ed576108ec611373565b5b8160a00151600281111561090457610903611373565b5b0361094a5780600001516040517f6e05a1a60000000000000000000000000000000000000000000000000000000081526004016109419190611c31565b60405180910390fd5b826001600086815260200190815260200160002060050160006101000a81548160ff0219169083600281111561098357610982611373565b5b021790555060006040518060800160405280836000015181526020018560028111156109b2576109b1611373565b5b815260200184815260200142815250905060026000836000015181526020019081526020016000208190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836002811115610a3957610a38611373565b5b02179055506040820151816002019081610a539190611df8565b50606082015181600301555050836002811115610a7357610a72611373565b5b3373ffffffffffffffffffffffffffffffffffffffff1683600001517f9dfc024daba0562f169d31c70b0fe200752bcce8973f6ef01673e2e5c1521a4c60405160405180910390a45050505050565b610aca6110fa565b610ad46000611181565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610b0761124d565b6000600160008481526020019081526020016000206040518060e001604052908160008201548152602001600182018054610b4190611bf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610b6d90611bf1565b8015610bba5780601f10610b8f57610100808354040283529160200191610bba565b820191906000526020600020905b815481529060010190602001808311610b9d57829003601f168201915b50505050508152602001600282018054610bd390611bf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610bff90611bf1565b8015610c4c5780601f10610c2157610100808354040283529160200191610c4c565b820191906000526020600020905b815481529060010190602001808311610c2f57829003601f168201915b5050505050815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff166002811115610c8e57610c8d611373565b5b6002811115610ca057610c9f611373565b5b81526020016005820160019054906101000a900460ff16151515158152505090508060c00151610d0757826040517fc0da6566000000000000000000000000000000000000000000000000000000008152600401610cfe9190611c31565b60405180910390fd5b80915050919050565b610d186110fa565b60006002811115610d2c57610d2b611373565b5b8160a001516002811115610d4357610d42611373565b5b14610d895780600001516040517f3dd8cf91000000000000000000000000000000000000000000000000000000008152600401610d809190611c31565b60405180910390fd5b60018160c00190151590811515815250506003819080600181540180825580915050600190039060005260206000209060060201600090919091909150600082015181600001556020820151816001019081610de59190611df8565b506040820151816002019081610dfb9190611df8565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836002811115610e3b57610e3a611373565b5b021790555060c08201518160050160016101000a81548160ff0219169083151502179055505050806001600083600001518152602001908152602001600020600082015181600001556020820151816001019081610e999190611df8565b506040820151816002019081610eaf9190611df8565b50606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690836002811115610eef57610eee611373565b5b021790555060c08201518160050160016101000a81548160ff02191690831515021790555090505060006040518060800160405280836000015181526020018360a001516002811115610f4557610f44611373565b5b81526020016040518060400160405280601081526020017f4f72646572206973206372656174656400000000000000000000000000000000815250815260200142815250905060026000836000015181526020019081526020016000208190806001815401808255809150506001900390600052602060002090600402016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561100157611000611373565b5b0217905550604082015181600201908161101b9190611df8565b506060820151816003015550503373ffffffffffffffffffffffffffffffffffffffff1682600001517f255cc77dd8d16527dcea12c4ccfe8afa1fd70795527f5be34d6e5b88f6efa36c60405160405180910390a35050565b61107c6110fa565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036110ee5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016110e5919061191e565b60405180910390fd5b6110f781611181565b50565b611102611245565b73ffffffffffffffffffffffffffffffffffffffff16611120610ad6565b73ffffffffffffffffffffffffffffffffffffffff161461117f57611143611245565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611176919061191e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e0016040528060008152602001606081526020016060815260200160008152602001600081526020016000600281111561128f5761128e611373565b5b81526020016000151581525090565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6000819050919050565b6112dd816112ca565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561131d578082015181840152602081019050611302565b60008484015250505050565b6000601f19601f8301169050919050565b6000611345826112e3565b61134f81856112ee565b935061135f8185602086016112ff565b61136881611329565b840191505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600381106113b3576113b2611373565b5b50565b60008190506113c4826113a2565b919050565b60006113d4826113b6565b9050919050565b6113e4816113c9565b82525050565b60008115159050919050565b6113ff816113ea565b82525050565b600060e08301600083015161141d60008601826112d4565b5060208301518482036020860152611435828261133a565b9150506040830151848203604086015261144f828261133a565b915050606083015161146460608601826112d4565b50608083015161147760808601826112d4565b5060a083015161148a60a08601826113db565b5060c083015161149d60c08601826113f6565b508091505092915050565b60006114b48383611405565b905092915050565b6000602082019050919050565b60006114d48261129e565b6114de81856112a9565b9350836020820285016114f0856112ba565b8060005b8581101561152c578484038952815161150d85826114a8565b9450611518836114bc565b925060208a019950506001810190506114f4565b50829750879550505050505092915050565b6000602082019050818103600083015261155881846114c9565b905092915050565b6000604051905090565b600080fd5b600080fd5b61157d816112ca565b811461158857600080fd5b50565b60008135905061159a81611574565b92915050565b6000602082840312156115b6576115b561156a565b5b60006115c48482850161158b565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060808301600083015161161160008601826112d4565b50602083015161162460208601826113db565b506040830151848203604086015261163c828261133a565b915050606083015161165160608601826112d4565b508091505092915050565b600061166883836115f9565b905092915050565b6000602082019050919050565b6000611688826115cd565b61169281856115d8565b9350836020820285016116a4856115e9565b8060005b858110156116e057848403895281516116c1858261165c565b94506116cc83611670565b925060208a019950506001810190506116a8565b50829750879550505050505092915050565b6000602082019050818103600083015261170c818461167d565b905092915050565b6003811061172157600080fd5b50565b60008135905061173381611714565b92915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61177b82611329565b810181811067ffffffffffffffff8211171561179a57611799611743565b5b80604052505050565b60006117ad611560565b90506117b98282611772565b919050565b600067ffffffffffffffff8211156117d9576117d8611743565b5b6117e282611329565b9050602081019050919050565b82818337600083830152505050565b600061181161180c846117be565b6117a3565b90508281526020810184848401111561182d5761182c61173e565b5b6118388482856117ef565b509392505050565b600082601f83011261185557611854611739565b5b81356118658482602086016117fe565b91505092915050565b6000806000606084860312156118875761188661156a565b5b60006118958682870161158b565b93505060206118a686828701611724565b925050604084013567ffffffffffffffff8111156118c7576118c661156f565b5b6118d386828701611840565b9150509250925092565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611908826118dd565b9050919050565b611918816118fd565b82525050565b6000602082019050611933600083018461190f565b92915050565b600060e08301600083015161195160008601826112d4565b5060208301518482036020860152611969828261133a565b91505060408301518482036040860152611983828261133a565b915050606083015161199860608601826112d4565b5060808301516119ab60808601826112d4565b5060a08301516119be60a08601826113db565b5060c08301516119d160c08601826113f6565b508091505092915050565b600060208201905081810360008301526119f68184611939565b905092915050565b600080fd5b600080fd5b611a11816113ea565b8114611a1c57600080fd5b50565b600081359050611a2e81611a08565b92915050565b600060e08284031215611a4a57611a496119fe565b5b611a5460e06117a3565b90506000611a648482850161158b565b600083015250602082013567ffffffffffffffff811115611a8857611a87611a03565b5b611a9484828501611840565b602083015250604082013567ffffffffffffffff811115611ab857611ab7611a03565b5b611ac484828501611840565b6040830152506060611ad88482850161158b565b6060830152506080611aec8482850161158b565b60808301525060a0611b0084828501611724565b60a08301525060c0611b1484828501611a1f565b60c08301525092915050565b600060208284031215611b3657611b3561156a565b5b600082013567ffffffffffffffff811115611b5457611b5361156f565b5b611b6084828501611a34565b91505092915050565b611b72816118fd565b8114611b7d57600080fd5b50565b600081359050611b8f81611b69565b92915050565b600060208284031215611bab57611baa61156a565b5b6000611bb984828501611b80565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611c0957607f821691505b602082108103611c1c57611c1b611bc2565b5b50919050565b611c2b816112ca565b82525050565b6000602082019050611c466000830184611c22565b92915050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302611cae7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611c71565b611cb88683611c71565b95508019841693508086168417925050509392505050565b6000819050919050565b6000611cf5611cf0611ceb846112ca565b611cd0565b6112ca565b9050919050565b6000819050919050565b611d0f83611cda565b611d23611d1b82611cfc565b848454611c7e565b825550505050565b600090565b611d38611d2b565b611d43818484611d06565b505050565b5b81811015611d6757611d5c600082611d30565b600181019050611d49565b5050565b601f821115611dac57611d7d81611c4c565b611d8684611c61565b81016020851015611d95578190505b611da9611da185611c61565b830182611d48565b50505b505050565b600082821c905092915050565b6000611dcf60001984600802611db1565b1980831691505092915050565b6000611de88383611dbe565b9150826002028217905092915050565b611e01826112e3565b67ffffffffffffffff811115611e1a57611e19611743565b5b611e248254611bf1565b611e2f828285611d6b565b600060209050601f831160018114611e625760008415611e50578287015190505b611e5a8582611ddc565b865550611ec2565b601f198416611e7086611c4c565b60005b82811015611e9857848901518255600182019150602085019450602081019050611e73565b86831015611eb55784890151611eb1601f891682611dbe565b8355505b6001600288020188555050505b50505050505056fea264697066735822122013d4774ec9a3a54292c5eed22eb5799fb54032907910091db080db37736d668264736f6c63430008140033",
  "devdoc": {
    "author": "Tano",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "createOrder((uint256,string,string,uint256,uint256,uint8,bool))": {
        "details": "creating new order by passing the order struct as paramater and record it in related state variable"
      },
      "getListOfOrders()": {
        "details": "getter function"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updateOrderStatus(uint256,uint8,string)": {
        "details": "We pass enum as parameter so we don't need to manually validate if the given input is valid enum If the input is undefined enum value, it automatically give error before it reaches our function We also need to check the order existence User only can update status into different status"
      }
    },
    "title": "decentralized order tracking system",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contract is to implement secure and seamless decentralized order tracking system",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/OrderTracker.sol:OrderTracker",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 230,
        "contract": "contracts/OrderTracker.sol:OrderTracker",
        "label": "s_packageIdToOrder",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_uint256,t_struct(Order)215_storage)"
      },
      {
        "astId": 236,
        "contract": "contracts/OrderTracker.sol:OrderTracker",
        "label": "s_packageIdToOrderHistory",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_array(t_struct(OrderHistory)225_storage)dyn_storage)"
      },
      {
        "astId": 240,
        "contract": "contracts/OrderTracker.sol:OrderTracker",
        "label": "s_listOfOrders",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_struct(Order)215_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Order)215_storage)dyn_storage": {
        "base": "t_struct(Order)215_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderTracker.Order[]",
        "numberOfBytes": "32"
      },
      "t_array(t_struct(OrderHistory)225_storage)dyn_storage": {
        "base": "t_struct(OrderHistory)225_storage",
        "encoding": "dynamic_array",
        "label": "struct OrderTracker.OrderHistory[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_enum(OrderStatus)199": {
        "encoding": "inplace",
        "label": "enum OrderTracker.OrderStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_uint256,t_array(t_struct(OrderHistory)225_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OrderTracker.OrderHistory[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(OrderHistory)225_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Order)215_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct OrderTracker.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)215_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Order)215_storage": {
        "encoding": "inplace",
        "label": "struct OrderTracker.Order",
        "members": [
          {
            "astId": 201,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "packageId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "sender",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 205,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "recepient",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 207,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "dispatchTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 209,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "deliveryTime",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 212,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "status",
            "offset": 0,
            "slot": "5",
            "type": "t_enum(OrderStatus)199"
          },
          {
            "astId": 214,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "exists",
            "offset": 1,
            "slot": "5",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(OrderHistory)225_storage": {
        "encoding": "inplace",
        "label": "struct OrderTracker.OrderHistory",
        "members": [
          {
            "astId": 217,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "packageId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 220,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "status",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(OrderStatus)199"
          },
          {
            "astId": 222,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "note",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 224,
            "contract": "contracts/OrderTracker.sol:OrderTracker",
            "label": "updatedTime",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}